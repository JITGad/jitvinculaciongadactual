{"version":3,"sources":["webpack:///./src/api/ColoresService.js","webpack:///./src/views/Color/Colores.vue","webpack:///./src/views/Color/Colores.vue?c9a9"],"names":["ColoresService","colorid","Promise","resolve","FetchMaster","get","encodeQueryString","data","result","Array","isArray","color","push","ObjectSelect","id","text","value","page","Color","post","JSONENCODE","put","idColor","delete","class","scope","align","roles","Colores","index","key","idcolortype","name","type","html","disabled","state","object","icon","EditarColor","EliminarColor","setup","props","context","instance","Router","list","bind","FetchData","uid","title","url_nuevo","unbind","pActual","setPageActual","getColoresAdministrador","response","status","error","message","changeData","conteo","totalPaginas","params","deleteColor","__exports__","render"],"mappings":"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","file":"js/chunk-913c7ab0.7b2d258e.js","sourcesContent":["import FetchMaster from \"./FetchMaster.js\";\r\nimport { encodeQueryString } from \"../util/Utilities.js\";\r\nimport ObjectSelect from \"../util/ObjectSelect.js\";\r\n\r\nclass ColoresService {\r\n\r\n  #urlApi = \"webresources/colortype\"\r\n\r\n  getColor(colorid = 0) {\r\n    return new Promise((resolve) => {\r\n      FetchMaster.get(`${this.#urlApi}/getcolortypebyid${encodeQueryString({ 'idcolortype': colorid })}`,\r\n        (data) => resolve(data), true);\r\n    });\r\n  }\r\n\r\n  getColoresSelectMenu() {\r\n    return new Promise((resolve) => {\r\n      FetchMaster.get(`${this.#urlApi}/getcolortypecv`, (data) => {\r\n        const result = [];\r\n        if (Array.isArray(data.data)) {\r\n          for (const color of data.data) {\r\n            result.push(new ObjectSelect(color.id, color.text, color.value));\r\n          }\r\n        }\r\n        resolve(result);\r\n      }, true, false);\r\n    });\r\n  }\r\n\r\n  getColoresAdministrador(page = 1) {\r\n    return new Promise((resolve) => {\r\n      FetchMaster.get(`${this.#urlApi}/getcolortypeAdmin${encodeQueryString({ 'page': page })}`,\r\n        (data) => resolve(data), true, true)\r\n    });\r\n  }\r\n\r\n  postColor(Color) {\r\n    return new Promise((resolve) => {\r\n      FetchMaster.post(`${this.#urlApi}/postColortype`, Color, \r\n                      (data) => resolve(data), FetchMaster.JSONENCODE, true);\r\n    });\r\n  }\r\n\r\n  putColor(Color) {\r\n    return new Promise((resolve) => {\r\n      FetchMaster.put(`${this.#urlApi}/putColortype`,\r\n        Color, (data) => resolve(data), FetchMaster.JSONENCODE, true);\r\n    });\r\n  }\r\n\r\n  deleteColor(idColor = 0) {\r\n    return new Promise(async (resolve) => {\r\n      await FetchMaster.delete(`${this.#urlApi}/deleteColortype`, { 'idcolortype': idColor }, (data) => resolve(data));\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport default new ColoresService(); ","<template>\r\n  <table class=\"table table-bordered table-striped table-hover table-light\">\r\n    <thead class=\"thead-light\">\r\n      <tr>\r\n        <th scope=\"col\">Id</th>\r\n        <th scope=\"col\">Nombre</th>\r\n        <th scope=\"col\">Color</th>\r\n        <th scope=\"col\">Estado</th>\r\n        <th scope=\"col\">Editar</th>\r\n        <my-autorization roles=\"Administrador\">\r\n          <th scope=\"col\">Eliminar</th>\r\n        </my-autorization>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr v-for=\"(Color, index) in Colores\" :key=\"index\">\r\n        <th scope=\"row\">{{ Color.idcolortype }}</th>\r\n        <td>{{ Color.name }}</td>\r\n        <td>\r\n            <input type=\"color\" :value=\"Color.html\" class=\"form-control form-control-color\" disabled />\r\n        </td>\r\n        <td>{{ Color.state ? \"Activo\" : \"Inactivo\" }}</td>\r\n        <td align=\"center\">\r\n          <my-link-table\r\n            :object=\"Color\"\r\n            icon=\"fas fa-pen\"\r\n            @click=\"EditarColor\"\r\n          />\r\n        </td>\r\n        <my-autorization roles=\"Administrador\">\r\n          <td align=\"center\">\r\n            <my-link-table\r\n              :object=\"Color\"\r\n              icon=\"fas fa-trash\"\r\n              @click=\"EliminarColor\"\r\n            />\r\n          </td>\r\n        </my-autorization>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  ref,\r\n  onMounted,\r\n  inject,\r\n  getCurrentInstance,\r\n  onBeforeUnmount,\r\n} from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport ColoresService from \"../../api/ColoresService.js\";\r\nimport {\r\n  confirm_action,\r\n  message_error,\r\n  message_info,\r\n} from \"../../util/Messages.js\";\r\n\r\nexport default {\r\n  name: \"Colores\",\r\n  setup(props, context) {\r\n    const instance = getCurrentInstance();\r\n    const Colores = ref([]);\r\n    const Router = useRouter();\r\n    const list = inject(\"layout-list\");\r\n\r\n    onMounted(async () => {\r\n      list.bind({\r\n        FetchData,\r\n        uid: instance.uid,\r\n        title: \"Mis Colores\",\r\n        url_nuevo: \"/create/color\",\r\n      });\r\n      await FetchData();\r\n    });\r\n\r\n    onBeforeUnmount(() => {\r\n      list.unbind(instance.uid);\r\n    });\r\n\r\n    const FetchData = async (pActual = 1) => {\r\n      list.setPageActual(pActual);\r\n      const response = await ColoresService.getColoresAdministrador(\r\n        pActual\r\n      );\r\n      if (!response.status.error) {\r\n        list.changeData(response.conteo, response.totalPaginas);\r\n        Colores.value = response.data;\r\n      } else {\r\n        message_error(response.status.message);\r\n      }\r\n    };\r\n\r\n    const EditarColor = (Color) => {\r\n      Router.push({\r\n        name: \"EditarColor\",\r\n        params: { id: Color[\"idcolortype\"] },\r\n      });\r\n    };\r\n\r\n    const EliminarColor = (Color) => {\r\n      confirm_action(\r\n        \"Confirmación\",\r\n        `Esta seguro de eliminar la Color ${Color.name}`,\r\n        async () => {\r\n          const response = await ColoresService.deleteColor(\r\n            Color.idcolortype\r\n          );\r\n          if (!response.status.error) {\r\n            message_info(\"Registro eliminado correctamente\", async () => {\r\n              await FetchData();\r\n            });\r\n          } else {\r\n            message_error(response.status.message);\r\n          }\r\n        },\r\n        () => {}\r\n      );\r\n    };\r\n\r\n    return {\r\n      Colores,\r\n      EditarColor,\r\n      EliminarColor,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n","import { render } from \"./Colores.vue?vue&type=template&id=2fabddc4\"\nimport script from \"./Colores.vue?vue&type=script&lang=js\"\nexport * from \"./Colores.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Vinculación\\\\jitvinculaciongadactual\\\\fjitgad\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}